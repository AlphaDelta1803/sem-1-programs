1)
a) To find the squares of odd numbers using mymap function, which mimics map.
def square(n):
    return n*n
def mymap(func, list1):
    result = []
    for i in list1:
        result.append(func(i))
    return result
l1 = range(1, 10, 2)
l3 = mymap(square, l1)
print(l3)

b) Add "ing" to all the elements of the
def update(n):
    return n + "ing"
def mymap(func, list1):
    result = []
    for i in list1:
        result.append(func(i))
    return result
l1 = ["walk", "eat", "sleep"]
l3 = mymap(update, l1)
print(l3)

c) To create a list of tuples
def xyz(n):
    return n, len(n)
def mymap(func, list1):
    result = []
    for i in list1:
        result.append(func(i))
    return result
l1 = ["walk", "eat", "sleep"]
l3 = mymap(xyz, l1)
print(l3)

2) Write a function to mimic filter called myfilter,
   and test it by removing all strings having first
   character as a digit from a given list of strings
def myfilter(func, list1):
    result = []
    for i in list1:
        if func(i):
            result.append(i)
    return result
def xyz(n):
    if n[0].isdigit() == False:
        return n
    else:
        return None
l1 = ["hi", "hello", "1pes", "2345"]
l2 = myfilter(xyz, l1)
print(l2)
# get rid of the None value

Week 12 Extra pgms:
1) Add 2 lists and find the different between lists using map()

2) Listify the list if given strings individually using map()

3) Add 3 list using map and lambda expression
